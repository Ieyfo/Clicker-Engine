<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>colors();
spacing = 20
optionSpacing = 24;
optionsBackStart = 950;
optionSelectStart = spacing;
optionSelectSize = 64;
optionElementStart = optionSelectStart+spacing+optionSelectSize;
optionHover = noone;
optionOn = 0;

// Options
option[0] = sAdvancements;
option[1] = sWork;
option[2] = sUpgrade;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(var i=0; i&lt;array_length_1d(option); i++){
    if(point_in_rectangle(mouse_x, mouse_y, optionsBackStart+spacing+optionSpacing+(i*(optionSelectSize+optionSpacing)), spacing, optionSelectSize+optionsBackStart+spacing+optionSpacing+(i*(optionSelectSize+optionSpacing)), spacing+optionSelectSize)){
        optionHover = i;
    }else{
        optionHover = noone;
    }
    
    if(mouse_check_button_pressed(mb_left) &amp;&amp; point_in_rectangle(mouse_x, mouse_y, optionsBackStart+spacing+optionSpacing+(i*(optionSelectSize+optionSpacing)), spacing, optionSelectSize+optionsBackStart+spacing+optionSpacing+(i*(optionSelectSize+optionSpacing)), spacing+optionSelectSize)){
        optionOn = i;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw Background
draw_rectangle_colour(0, 0, room_width, room_height, global.main, global.main, global.main, global.main, false);

// Draw Gradient for options background
draw_sprite_ext(sGradient, 0, optionsBackStart, 0, 1, room_height, 0, c_white, 1)

// Draw Options Background
draw_rectangle_colour(optionsBackStart, 0, room_width, room_height, global.main2, global.main2, global.main2, global.main2, false);

// Draw Inner Elements
// Option Select
draw_rectangle_colour(optionsBackStart+spacing, spacing, room_width-spacing, spacing+optionSelectSize, global.main3, global.main3, global.main3, global.main3, false);

//Draw Options
for(var i=0; i&lt;array_length_1d(option); i++){
    if(optionHover == i){
        draw_sprite_ext(option[i], 0, optionsBackStart+spacing+optionSpacing+(i*(optionSelectSize+optionSpacing)), spacing, 1, 1, 0, c_dkgray, .6);
    }else{
        draw_sprite(option[i], 0, optionsBackStart+spacing+optionSpacing+(i*(optionSelectSize+optionSpacing)), spacing);
    }
}

// Options elements
draw_rectangle_colour(optionsBackStart+spacing, optionElementStart, room_width-spacing, room_height-spacing, global.main3, global.main3, global.main3, global.main3, false);

// Text would go here
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
