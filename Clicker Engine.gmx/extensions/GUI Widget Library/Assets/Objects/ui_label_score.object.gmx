<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ui</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>ui_label</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
Copyright (c) 2016 NailBuster Software Inc. (david@nailbuster.com). All rights reserved.



This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.
You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA


*/

event_inherited();

uiAlign=fa_center;
uiSetScore=-1;
uiScoreInc=10;  //increment value
uiScoreDec=0;    //number of decimals
uiScoreLength=1; //see string_format function in gms
uiThousandSep=',';
uiEffectAbove=-1;
uiEffectColor=c_yellow;
uiEffectBelow=-1;
uiEffectDelay=5;  //steps
uiTextColorChange=c_green;  //



lscurval=0;
lsdelay=1;  //internal
lsdelta=0;  
lsvalue=0; 
lsinc=0;
lsdisnum=0;
lsanimated=true;
ischanging=false;
lseffectcount=0;

scr_gui_setdefaults();         //you should set your default properties in this script.


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();


if uiSetScore != -1  //has been changed
      {
       lsvalue=uiSetScore;    //where we going to...
       lsdelta=lsvalue-lscurval;       
       if lsdelta&lt;0 lsinc=uiScoreInc*-1; else lsinc=uiScoreInc;  //set increment
       uiSetScore=-1;  //reset flag
      }

if lsdelta != 0 
     {lscurval+=lsinc;  //up or down
      lsdelta=lsvalue-lscurval;
      ischanging=true;
      if abs(lsvalue-lscurval)&lt;abs(lsinc) {lsdelta=0;
                                           lscurval=lsvalue;
                                           ischanging=false;
                                          }                                             
     }
     
if inAnimation
    { if lscurval=lsvalue  then
       {
        if (lsanimated==true) then
                      {   with (ui_ani_control)  //hold animation objects
                              {  if EaseControl==other.id {EasePause=true;} }    
                          lsanimated=false;   
                      }   
       }
      else {  //we need to re-animate if animated!
            if (lsanimated==false) then
                      {   with (ui_ani_control)  //reset animation objects
                              {  if EaseControl==other.id {EasePause=false;} }    
                          lsanimated=true;   
                      }
           }              
    } //if we animate, we do it only when we are moving....       
     
      
lsdisnum=lscurval;
                  
uiTextValue=string_format(lsdisnum,uiScoreLength,uiScoreDec);      

lseffectcount+=1;

if (ischanging) &amp;&amp; (lseffectcount&gt;uiEffectDelay)
   {           
       if uiEffectAbove!=-1 effect_create_above(uiEffectAbove,x+irandom(sprite_width),y+irandom(sprite_height),1,uiEffectColor);
       if uiEffectBelow!=-1 effect_create_below(uiEffectBelow,x+irandom(sprite_width),y+irandom(sprite_height),1,uiEffectColor);
       lseffectcount=0; //reset delay counter;        
   }   
                                                    


      
      

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
